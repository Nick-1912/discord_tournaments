import discord
from discord.ext import commands
from cfg import config_referee
import asyncio
import nest_asyncio
import data_methods
import qiwi_methods
from faceit_methods import FACEIT

nest_asyncio.apply()

faceit_bot_1 = FACEIT()
faceit_bot_1.faceit_login()
input('press enter after login')

bot = commands.Bot(command_prefix=config_referee['prefix'], intents=discord.Intents.all())
agree_bet = 'üëç'
delete_bet = '‚ùå'


@bot.event
async def on_ready():
    print('bot started')


@bot.command(pass_context=True)
@commands.has_role(778995970221932555)
async def go(ctx, bet):
    await ctx.channel.purge(limit=1)
    try:
        float(bet)
    except ValueError:
        ans = await ctx.send(f'{ctx.author.mention}, –í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!')
        await ans.delete(delay=5)
        return

    result = data_methods.start_method(name='get: user_id',
                                       user_id=ctx.author.id)
    if float(result['cash']) < float(bet):
        await ctx.author.send(f'{ctx.author.mention}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!')
        return
    message = await ctx.send(f'{ctx.author.mention} —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –Ω–∞ {bet}!')
    await message.add_reaction(agree_bet)
    await message.add_reaction(delete_bet)

    def check(reaction_st1, user_st1):
        if str(user_st1) == 'referee_bot#5816':
            return
        result1 = data_methods.start_method(name='get: user_id',
                                            user_id=user_st1.id)
        if float(result1['cash']) < float(bet):
            loop = asyncio.get_event_loop()
            loop.run_until_complete(user_st1.send(f'{user_st1.mention}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!'))
            return
        else:
            return user_st1 != ctx.author and str(reaction_st1.emoji) == agree_bet or user_st1 == ctx.author and str(
                reaction_st1.emoji) == delete_bet

    try:
        reaction, user = await bot.wait_for('reaction_add', timeout=300.0, check=check)

    except asyncio.TimeoutError:
        ans = await ctx.send(f'{ctx.author.mention} –Ω–∏–∫—Ç–æ –Ω–µ —Å–æ–≥–ª–∞—Å–∏–ª—Å—è :(')
        await message.delete()
        await ans.delete(delay=30)
        return
    if str(reaction.emoji) == agree_bet:
        await message.delete()
        ans2 = await ctx.send(f'{ctx.author.mention} –∏ {user.mention} –Ω–∞—á–∞–ª–æ –í–∞—à–µ–≥–æ –º–∞—Ç—á–∞!\n'
                              f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–µ –ø—Ä–∏—Å—É—Ç—Å–≤–∏–µ (30 —Å–µ–∫):')
        await ans2.add_reaction('‚úîÔ∏è')
        await asyncio.sleep(30)
        cache_ans2 = discord.utils.get(bot.cached_messages, id=ans2.id)
        reacts = cache_ans2.reactions[0]
        users = await reacts.users().flatten()
        users_count = 0
        await ans2.delete()
        for temp_user in users:
            if temp_user.id == user.id or temp_user.id == ctx.author.id:
                users_count += 1
            if users_count == 2:
                ans3 = await ctx.send(f'{ctx.author.mention} –∏ {user.mention} –í–∞—à –º–∞—Ç—á –≥–æ—Ç–æ–≤! '
                                      f'–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –í–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç—á...')
                data_methods.start_method(name='edit: minus_cash',
                                          user_id=ctx.author.id, cash=bet)
                data_methods.start_method(name='edit: minus_cash',
                                          user_id=user.id, cash=bet)
                #
                # create match
                #
                result = faceit_bot_1.start_method(name='create_tournament',
                                                   nickname1=ctx.author.name, nickname2=user.name)
                while result:
                    print('[match] cant create, waiting 10 sec...')
                    faceit_bot_1.start_method(name='create_tournament',
                                              nickname1=ctx.author.name, nickname2=user.name)
                    await asyncio.sleep(10)

                await ans3.delete(delay=5)
                break
        else:
            ans3 = await ctx.send(f'{ctx.author.mention} –∏ {user.mention} –í–∞—à –º–∞—Ç—á –æ—Ç–º–µ–Ω–µ–Ω, –æ–¥–∏–Ω –∏–∑ –í–∞—Å –Ω–µ –ø—Ä–∏–Ω—è–ª!')
        await ans3.delete(delay=10)
        return
    elif str(reaction.emoji) == delete_bet:
        await message.delete()
        ans = await ctx.send(f'{ctx.author.mention}, –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–æ–±—ã—Ç–∏–µ')
        await ans.delete(delay=5)
        return


@bot.command(pass_context=True)
@commands.has_role(778995970221932555)
async def info(ctx):
    await ctx.channel.purge(limit=1)
    qiwi_methods.update_cash(user_id=ctx.author.id)
    result = data_methods.start_method(name='get: user_id',
                                       user_id=ctx.author.id)
    await ctx.author.send(f"–í–∞—à –±–∞–ª–∞–Ω—Å: {result['cash']} —Ä—É–±")


@bot.command(pass_context=True)
@commands.has_role(778995970221932555)
async def cash(ctx, amount=None):
    await ctx.channel.purge(limit=1)
    if not amount:
        ans = await ctx.send(f'{ctx.author.mention}, –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞!')
        await ans.delete(delay=5)
        return
    try:
        float(amount)
    except ValueError:
        ans = await ctx.send(f'{ctx.author.mention}, –í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!')
        await ans.delete(delay=5)
        return
    result = data_methods.start_method(name='get: user_id',
                                       user_id=ctx.author.id)
    if float(result['cash']) < float(amount):
        await ctx.author.send(f'{ctx.author.mention}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞!')
    else:
        qiwi_methods.send_cash(user_id=ctx.author.id, cash=amount)
        await ctx.author.send(f'{ctx.author.mention}, –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞.')


bot.run(config_referee['token'])
